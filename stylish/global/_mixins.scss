/* MIXINS STYLES */
/* ---------------------------------------------------------------------------------------------------------------------------------- */


/* Setup Link color states */
@mixin link_color($color:$link_color, $color_hover:$link_color_hover, $text_decoration: none, $cursor:pointer){
  color: $color;
  @if $text_decoration  {text-decoration:$text_decoration}
  @if $cursor           {cursor:$cursor}

  @if $color_hover {
    &:hover,
    &.active {  color: $color_hover;  }
  }
  &.disabled{ color: $color; }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


/* Setup buttons colors */
@mixin btn_color($bg:$button_background_color, $text:$button_txt_color, $border:false, $bg_hover:false, $text_hover:false, $border_hover:false){
  background-color: $bg;
  color: $text;
  @if not $border{
    border-color: $bg;
  }@else{
    border-color: $border;
  }

  &:hover, &.active{
    @if not $bg_hover{
      background-color: darken($bg, 8%);
    }@else{
      background-color: $bg_hover;
    }

    @if not $text_hover{
      color: $text;
    }@else{
      color: $text_hover;
    }

    @if not $border_hover{
      border-color: darken($bg, 8%);
    }@else{
      border-color: $border_hover;
    }
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


///* Font Declaration mixin (not using compasses default mixin) */
@mixin font_face($name, $path, $weight: normal, $style: normal, $eot:true, $svg:true, $woff2:true, $woff:true, $ttf:true) {
  $src: null;
  $eot_extmods: null;
  $eot_format: null;
  $svg_extmods: null;
  $ttf_format: null;

  //Define variables
  @if $eot == true{
    $eot: eot;
    $eot_extmods: "?iefix";
    $eot_format: "embedded-opentype";
  }

  @if $svg == true{
    $svg: svg;
    $svg_extmods: "#" + $name
  }

  @if $woff2 == true{
    $woff2: woff2;
  }

  @if $woff == true{
    $woff: woff;
  }

  @if $ttf == true{
    $ttf: ttf;
    $ttf_format: "truetype";
  }

  //Create maps
  $exts:(
          $eot
          $svg
          $woff2
          $woff
          $ttf
  );

  $extmods: (
          eot: $eot_extmods,
          svg: $svg_extmods
  );

  $formats: (
          eot: $eot_format,
          ttf: $ttf_format
  );

  //Create src-s
  @each $ext in $exts {
    @if $ext{
      $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
      $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
      $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
  }

  //Print out css
  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    @if $eot{
      src: url(quote($path + "." + $eot));
    }
    src: $src;
  }

  @if $svg{
    @media screen and (-webkit-min-device-pixel-ratio: 0) {
      @font-face{
        font-family: quote($name);
        src: url(quote($path + "." + $svg)) format(quote($svg));
        font-style: $style;
        font-weight: $weight;
      }
    }
  }
}


/* Font Declaration (if some font type is ont user just call variable and set to false) */
//@include font_face('FONT NAME', 'LOCATION RELATIVE TO CSS FILE WITHOUT EXTENSION', WEIGHT, STYLE);
//@include font_face('Dosis', '../fonts/dosis_bold_italic_webfont', bold, italic);



/* ---------------------------------------------------------------------------------------------------------------------------------- */


// Placeholder mixin
@mixin placeholder {
  input::-webkit-input-placeholder {@content}
  input:-moz-placeholder           {@content}
  input::-moz-placeholder          {@content}
  input:-ms-input-placeholder      {@content}
  input.placeholder                {@content}
  input.placeholderjs              {@content}
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


/* Container size for responsive */
@mixin container_size($max_width:$page_max_width, $value: $responsive){
  @if $value == true{
    width: 100%; max-width: $max_width;
  } @else {
    width: $page_max_width;
  }
}

/* Default container style */
@mixin container_padding($container_gutter:$gutter/2){
  padding-left: $container_gutter; padding-right: $container_gutter;
}

//Generate different containers for different type of grid gutters
@mixin container_generate($container_name, $container_gutter){
  .container_#{$container_name}{
    @include container_padding($container_gutter);
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//For better font smoothing and fix button weight problem on mac
@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Generating text colors
@mixin txt_color_generator(){
  @each $scheme in $color_schemes {

    $name:  nth($scheme, 1);
    $color: nth($scheme, 2);
    $hover: nth($scheme, 3);

    .txt_#{$name}{
      color: $color;
    }
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Generating bg colors
@mixin bg_color_generator(){
  @each $scheme in $color_schemes {

    $name:  nth($scheme, 1);
    $color: nth($scheme, 2);
    $hover: nth($scheme, 3);

    .bg_#{$name}{
      background-color: $color;
    }
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Generating button colors
@mixin btn_color_generator(){
  @each $scheme in $color_schemes {

    $name:    nth($scheme, 1);
    $bg:      nth($scheme, 2);
    $txt:     nth($scheme, 3);

    &.btn_#{$name}{
      @include btn_color($bg, $txt)
    }

    &.btn_#{$name}_border{
      @include btn_color(transparent, $bg, $bg, $bg, $txt, $bg)
    }
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Checkbox size
@mixin checkbox_size($size:$checkbox_size, $size_icon:$checkbox_icon_size){
  min-height:$size;

  //Firefox min-height bug fix
  @-moz-document url-prefix() {
    height: $size;
  }

  label {
    padding-left:$size+15;
    &.empty{ padding-left:0; width: $size }
  }

  // icon
  .checkbox_icon {
    width: $size;height: $size; margin-top: -$size/2; line-height: $size;
    &:before{@extend .sy_check:before; font-size: $size_icon; margin: (-$size_icon/2) 0 0 (-$size_icon/2); width: $size_icon; height: $size_icon; line-height: $size_icon;}
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Radio size
@mixin radio_size($size:$radio_size, $size_icon:$radio_icon_size) {
  min-height:$size;

  //Firefox min-height bug fix
  @-moz-document url-prefix() {
    height: $size;
  }

  label{
    padding-left: $size+15;
    &.empty{ padding-left:0; width: $size }
  }

  // icon
  .radio_icon{
    width: $size; height: $size; margin-top: -$size/2; line-height: $size;
    &:before{ content: ""; margin: (-$size_icon/2) 0 0 (-$size_icon/2); width: $size_icon; height: $size_icon; }
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Select size
@mixin select_size($height: $input_height, $icon_size:$select_icon_size){
  @if $height   {height:$height;}
  @if $icon_size{
    &:after{ font-size:$icon_size; margin-top: -($icon_size/2)}
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Default input style
@mixin input_style( $color:$input_txt_color, $background_color:$input_bg_color, $border_width: $input_border_width, $border_style:$input_border_style, $border_color: $input_border_color, $margin: $input_margin, $width:$input_width, $font_family:$input_font_family, $radius: $input_radius){
  @if $color            {color:$color;}
  @if $background_color {background-color:$background_color;}
  @if $border_width     {border-width:$border_width;}
  @if $border_style     {border-style:$border_style;}
  @if $border_color     {border-color:$border_color;}
  @if $margin           {margin:$margin;}
  @if $width            {width:$width;}
  @if $font_family      {font-family:$font_family;}
  @if $radius           {@include border-radius($radius);}
}


@mixin input_size( $height: $input_height, $text_size: $input_txt_size, $padding:$input_padding ){
    @if $height     { height: $height; }
    @if $text_size  { font-size: $text_size; }
    @if $padding    { padding: $padding; }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Button size
@mixin btn_size($padding:$btn_default_padding, $font_size:$btn_default_txt_size, $line_height:$btn_default_line_height){
  @if $padding      {padding:$padding;}
  @if $font_size    {font-size:$font_size;}
  @if $line_height  {line-height:$line_height;}
}

//Default button style
@mixin btn_style($text_transform: $btn_transform, $font_family:$btn_font_family, $radius:$btn_radius, $border_width:$btn_border_width, $border_style:$btn_border_style,$text_align:$btn_txt_align, $width:$btn_width, $font_weight:$btn_txt_weight, $display:$btn_display, $white_space:$btn_white_space, $text_decoration: $btn_txt_decoration, $cursor:$btn_cursor, $margin:$btn_margin){
  @if $text_transform    {text-transform:$text_transform;}
  @if $font_family       {font-family:$font_family;}
  @if $radius            {@include border-radius($radius);}
  @if $border_width      {border-width:$border_width;}
  @if $border_style      {border-style:$border_style;}
  @if $text_align        {text-align:$text_align;}
  @if $width             {width:$width;}
  @if $font_weight       {font-weight:$font_weight;}
  @if $display           {display:$display;}
  @if $white_space       {white-space:$white_space;}
  @if $text_decoration   {text-decoration:$text_decoration;}
  @if $cursor            {cursor:$cursor;}
  @if $margin            {margin:$margin;}
}



/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Spacers margin and padding
@mixin spacers(){
  $i:100;
  @while $i > 0{
    .m_bottom#{$i}{ margin-bottom:#{$i}px;}
    .m_top#{$i}   { margin-top:#{$i}px}
    .p_bottom#{$i}{ padding-bottom:#{$i}px;}
    .p_top#{$i}   { padding-top:#{$i}px}
    $i:$i - 10;
  }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Tooltip colors
@mixin tooltip_color($tip_color:$tooltip_bg, $tip_txt: $tooltip_txt, $tip_border: $tooltip_border){
  background: $tip_color; color: $tip_txt; border: 1px solid $tip_border;
  &[data-tip-position="top"]:after,{ border-top-color: $tip_color; }
  &[data-tip-position="bottom"]:after{ border-bottom-color: $tip_color; }
  &[data-tip-position="left"]:after{ border-left-color: $tip_color; }
  &[data-tip-position="right"]:after{ border-right-color: $tip_color; }

  &[data-tip-position="top"]:before,{ border-top-color: $tip_border; }
  &[data-tip-position="bottom"]:before{ border-bottom-color: $tip_border; }
  &[data-tip-position="left"]:before{ border-left-color: $tip_border; }
  &[data-tip-position="right"]:before{ border-right-color: $tip_border; }
}


/* ---------------------------------------------------------------------------------------------------------------------------------- */


//Font style
@mixin font_style($font_size:false, $line_height:false, $font_weight:false, $font_style:false, $font_family:false){
  @if $font_size    {font-size: $font_size;}
  @if $line_height  {line-height: $line_height;}
  @if $font_weight  {font-weight: $font_weight;}
  @if $font_style   {font-style: $font_style;}
  @if $font_family  {font-family: $font_family;}
}
